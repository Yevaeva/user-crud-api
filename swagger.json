{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "User CRUD API",
    "description": "API doc for User Management Project"
  },
  "host": "localhost:3007",
  "basePath": "/api",
  "tags": [
    {
      "name": "Users",
      "description": "Users API"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/user": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a user",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/createUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getUser"
            }
          },
          "409": {
            "description": "Duplication detected",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Returns a users list",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getUsers"
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],

      "delete": {
        "summary": "Delete user with given ID",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/updateUser"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "createUser": {
      "required": ["name", "surname", "address", "email", "phone"],
      "properties": {
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "updateUser": {
      "properties": {
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "getUser": {
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "phone": {
          "type": "string"
        }
      }
    },
    "getUsers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/getUser"
      }
    },
    "deleteResponse": {
      "properties": {
        "success": {
          "type": "boolean"
        }
      }
    },
    "errorResponse": {
      "properties": {
        "error": {
          "properties": {
            "message": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "private": {
              "type": "boolean"
            },
            "status": {
              "type": "number"
            }
          }
        }
      }
    }
  }
}
